Action.c(50):     ommandName;\n
Action.c(50):             };\n
Action.c(50):             \n
Action.c(50):             // Try to read route configuration and log warning if not possible\n
Action.c(50):             var $route = {};\n
Action.c(50):             if (readFromRoute) {\n
Action.c(50):               if (!$injector.has('$route')) {\n
Action.c(50):                 $log.warn('$route service is not available. Make sure you have included ng-rou
Action.c(50):     te in your application dependencies.');\n
Action.c(50):               } else {\n
Action.c(50):                 $route = $injector.get('$route');\n
Action.c(50):               }\n
Action.c(50):             }\n
Action.c(50):     \n
Action.c(50):             // Get url for current page \n
Action.c(50):             var getUrl = function () {\n
Action.c(50):               // Using ngRoute provided tracking urls\n
Action.c(50):               if (readFromRoute && $route.current && ('pageTrack' in $route.current)) {\n
Action.c(50):                 return $route.current.pageTrack;\n
Action.c(50):               }\n
Action.c(50):                \n
Action.c(50):               // Otherwise go the old way\n
Action.c(50):               var url = trackUrlParams ? $location.url() : $location.path(); \n
Action.c(50):               return removeRegExp ? url.replace(removeRegExp, '') : url;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             var getUtmParams = function () {\n
Action.c(50):               var utmToCampaignVar = {\n
Action.c(50):                 utm_source: 'campaignSource',\n
Action.c(50):                 utm_medium: 'campaignMedium',\n
Action.c(50):                 utm_term: 'campaignTerm',\n
Action.c(50):                 utm_content: 'campaignContent',\n
Action.c(50):                 utm_campaign: 'campaignName'\n
Action.c(50):               };\n
Action.c(50):               var object = {};\n
Action.c(50):     \n
Action.c(50):               angular.forEach($location.search(), function (value, key) {\n
Action.c(50):                 var campaignVar = utmToCampaignVar[key];\n
Action.c(50):     \n
Action.c(50):                 if (angular.isDefined(campaignVar)) {\n
Action.c(50):                   object[campaignVar] = value;\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):     \n
Action.c(50):               return object;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * get ActionFieldObject\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#action-data\n
Action.c(50):              * @param id\n
Action.c(50):              * @param affliation\n
Action.c(50):              * @param revenue\n
Action.c(50):              * @param tax\n
Action.c(50):              * @param shipping\n
Action.c(50):              * @param coupon\n
Action.c(50):              * @param list\n
Action.c(50):              * @param step\n
Action.c(50):              * @param option\n
Action.c(50):              */\n
Action.c(50):             var getActionFieldObject = function (id, affiliation, revenue, tax, shipping, coup
Action.c(50):     on, list, step, option) {\n
Action.c(50):               var obj = {};\n
Action.c(50):               if (id) { obj.id = id; }\n
Action.c(50):               if (affiliation) { obj.affiliation = affiliation; }\n
Action.c(50):               if (revenue) { obj.revenue = revenue; }\n
Action.c(50):               if (tax) { obj.tax = tax; }\n
Action.c(50):               if (shipping) { obj.shipping = shipping; }\n
Action.c(50):               if (coupon) { obj.coupon = coupon; }\n
Action.c(50):               if (list) { obj.list = list; }\n
Action.c(50):               if (step) { obj.step = step; }\n
Action.c(50):               if (option) { obj.option = option; }\n
Action.c(50):               return obj;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Private Methods\n
Action.c(50):              */\n
Action.c(50):     \n
Action.c(50):             var _getProtocol = function (httpPostfix, httpsPostfix) {\n
Action.c(50):               var protocol = '',\n
Action.c(50):                   isSslEnabled = document.location.protocol === 'https:',\n
Action.c(50):                   isChromeExtension = document.location.protocol === 'chrome-extension:',\n
Action.c(50):                   isHybridApplication = analyticsJS === true && hybridMobileSupport === true;\n
Action.c(50):               httpPostfix = angular.isString(httpPostfix) ? httpPostfix : '';\n
Action.c(50):               httpsPostfix = angular.isString(httpsPostfix) ? httpsPostfix : '';\n
Action.c(50):               if (httpPostfix !== '') {\n
Action.c(50):                 protocol = 'http:' + httpPostfix;\n
Action.c(50):               }\n
Action.c(50):               if (isChromeExtension || isHybridApplication || (isSslEnabled && httpsPostfix !=
Action.c(50):     = '')) {\n
Action.c(50):                 protocol = 'https:' + httpsPostfix;\n
Action.c(50):               }\n
Action.c(50):               return protocol;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             var _gaJs = function (fn) {\n
Action.c(50):               if (!analyticsJS && $window._gaq && typeof fn === 'function') {\n
Action.c(50):                 fn();\n
Action.c(50):               }\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             var _gaq = function () {\n
Action.c(50):               var args = Array.prototype.slice.call(arguments);\n
Action.c(50):               if (offlineMode === true) {\n
Action.c(50):                 that.offlineQueue.push([_gaq, args]);\n
Action.c(50):                 return;\n
Action.c(50):               }\n
Action.c(50):               if (!$window._gaq) {\n
Action.c(50):                 $window._gaq = [];\n
Action.c(50):               }\n
Action.c(50):               if (logAllCalls === true) {\n
Action.c(50):                 that._log.apply(that, args);\n
Action.c(50):               }\n
Action.c(50):               $window._gaq.push(args);\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             var _analyticsJs = function (fn) {\n
Action.c(50):               if (analyticsJS && $window.ga && typeof fn === 'function') {\n
Action.c(50):                 fn();\n
Action.c(50):               }\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             var _ga = function () {\n
Action.c(50):               var args = Array.prototype.slice.call(arguments);\n
Action.c(50):               if (offlineMode === true) {\n
Action.c(50):                 that.offlineQueue.push([_ga, args]);\n
Action.c(50):                 return;\n
Action.c(50):               }\n
Action.c(50):               if (typeof $window.ga !== 'function') {\n
Action.c(50):                 that._log('warn', 'ga function not set on window');\n
Action.c(50):                 return;\n
Action.c(50):               }\n
Action.c(50):               if (logAllCalls === true) {\n
Action.c(50):                 that._log.apply(that, args);\n
Action.c(50):               }\n
Action.c(50):               $window.ga.apply(null, args);\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             var _gaMultipleTrackers = function (includeFn) {\n
Action.c(50):               // Drop the includeFn from the arguments and preserve the original command name\n
Action.c(50):               var args = Array.prototype.slice.call(arguments, 1),\n
Action.c(50):                   commandName = args[0],\n
Action.c(50):                   trackers = [];\n
Action.c(50):               if (typeof includeFn === 'function') {\n
Action.c(50):                 accounts.forEach(function (account) {\n
Action.c(50):                   if (includeFn(account)) {\n
Action.c(50):                     trackers.push(account);\n
Action.c(50):                   }\n
Action.c(50):                 });\n
Action.c(50):               } else {\n
Action.c(50):                 // No include function indicates that all accounts are to be used\n
Action.c(50):                 trackers = accounts;\n
Action.c(50):               }\n
Action.c(50):     \n
Action.c(50):               // To preserve backwards compatibility fallback to _ga method if no account\n
Action.c(50):               // matches the specified includeFn. This preserves existing behaviors by\n
Action.c(50):               // performing the single tracker operation.\n
Action.c(50):               if (trackers.length === 0) {\n
Action.c(50):                 _ga.apply(that, args);\n
Action.c(50):                 return;\n
Action.c(50):               }\n
Action.c(50):     \n
Action.c(50):               trackers.forEach(function (tracker) {\n
Action.c(50):                 // Check tracker 'select' function, if it exists, for whether the tracker shou
Action.c(50):     ld be used with the current command.\n
Action.c(50):                 // If the 'select' function returns false then the tracker will not be used wi
Action.c(50):     th the current command.\n
Action.c(50):                 if (isPropertyDefined('select', tracker) && typeof tracker.select === 'functio
Action.c(50):     n' && !tracker.select(args)) {\n
Action.c(50):                   return;\n
Action.c(50):                 }\n
Action.c(50):                 args[0] = generateCommandName(commandName, tracker);\n
Action.c(50):                 _ga.apply(that, args);\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             this._log = function () {\n
Action.c(50):               var args = Array.prototype.slice.call(arguments);\n
Action.c(50):               if (args.length > 0) {\n
Action.c(50):                 if (args.length > 1) {\n
Action.c(50):                   switch (args[0]) {\n
Action.c(50):                     case 'debug':\n
Action.c(50):                     case 'error':\n
Action.c(50):                     case 'info':\n
Action.c(50):                     case 'log':\n
Action.c(50):                     case 'warn':\n
Action.c(50):                       $log[args[0]](args.slice(1));\n
Action.c(50):                       break;\n
Action.c(50):                   }\n
Action.c(50):                 }\n
Action.c(50):                 that.log.push(args);\n
Action.c(50):               }\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /* DEPRECATED */\n
Action.c(50):             this._createScriptTag = function () {\n
Action.c(50):               that._registerScriptTags();\n
Action.c(50):               that._registerTrackers();\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /* DEPRECATED */\n
Action.c(50):             this._createAnalyticsScriptTag = function () {\n
Action.c(50):               that._registerScriptTags();\n
Action.c(50):               that._registerTrackers();\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             this._registerScriptTags = function () {\n
Action.c(50):               var document = $document[0],\n
Action.c(50):                   protocol = _getProtocol(),\n
Action.c(50):                   scriptSource;\n
Action.c(50):     \n
Action.c(50):               if (created === true) {\n
Action.c(50):                 that._log('warn', 'Script tags already created');\n
Action.c(50):                 return;\n
Action.c(50):               }\n
Action.c(50):     \n
Action.c(50):               if (disableAnalytics === true) {\n
Action.c(50):                 accounts.forEach(function (trackerObj) {\n
Action.c(50):                   that._log('info', 'Analytics disabled: ' + trackerObj.tracker);\n
Action.c(50):                   $window['ga-disable-' + trackerObj.tracker] = true;\n
Action.c(50):                 });\n
Action.c(50):               }\n
Action.c(50):     \n
Action.c(50):               //\n
Action.c(50):               // Universal Analytics\n
Action.c(50):               //\n
Action.c(50):               if (analyticsJS === true) {\n
Action.c(50):                 scriptSource = protocol + '//www.google-analytics.com/' + (debugMode ? 'analyt
Action.c(50):     ics_debug.js' : 'analytics.js');\n
Action.c(50):                 if (testMode !== true) {\n
Action.c(50):                   // If not in test mode inject the Google Analytics tag\n
Action.c(50):                   (function (i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function (
Action.c(50):     ){\n
Action.c(50):                     (i[r].q=i[r].q||[]).push(arguments);},i[r].l=1*new Date();a=s.createElemen
Action.c(50):     t(o),\n
Action.c(50):                     m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore
Action.c(50):     (a,m);\n
Action.c(50):                   })(window,document,'script',scriptSource,'ga');\n
Action.c(50):                 } else {\n
Action.c(50):                   if (typeof $window.ga !== 'function') {\n
Action.c(50):                     // In test mode create a ga function if none exists that is a noop sink.\n
Action.c(50):                     $window.ga = function () {};\n
Action.c(50):                   }\n
Action.c(50):                   // Log script injection.\n
Action.c(50):                   that._log('inject', scriptSource);\n
Action.c(50):                 }\n
Action.c(50):     \n
Action.c(50):                 if (traceDebuggingMode) {\n
Action.c(50):                   $
Action.c(50): t=248903ms: 2966-byte DECODED response body for "https://www.advantageonlineshopping.com/main.min.js" (RelFrameId=, Internal ID=93)
Action.c(50):     window.ga_debug = { trace: true };\n
Action.c(50):                 }\n
Action.c(50):     \n
Action.c(50):                 if (experimentId) {\n
Action.c(50):                   var expScript = document.createElement('script'),\n
Action.c(50):                       s = document.getElementsByTagName('script')[0];\n
Action.c(50):                   expScript.src = protocol + '//www.google-analytics.com/cx/api.js?experiment=
Action.c(50):     ' + experimentId;\n
Action.c(50):                   s.parentNode.insertBefore(expScript, s);\n
Action.c(50):                 }\n
Action.c(50):               //\n
Action.c(50):               // Classic Analytics\n
Action.c(50):               //\n
Action.c(50):               } else {\n
Action.c(50):                 scriptSource = _getProtocol('//www', '//ssl') + '.google-analytics.com/ga.js';
Action.c(50):     \n
Action.c(50):                 if (displayFeatures === true) {\n
Action.c(50):                   scriptSource = protocol + '//stats.g.doubleclick.net/dc.js';\n
Action.c(50):                 }\n
Action.c(50):     \n
Action.c(50):                 if (testMode !== true) {\n
Action.c(50):                   // If not in test mode inject the Google Analytics tag\n
Action.c(50):                   (function () {\n
Action.c(50):                     var ga = document.createElement('script'); ga.type = 'text/javascript'; ga
Action.c(50):     .async = true;\n
Action.c(50):                     ga.src = scriptSource;\n
Action.c(50):                     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBef
Action.c(50):     ore(ga, s);\n
Action.c(50):                   })();\n
Action.c(50):                 } else {\n
Action.c(50):                   // Log the source location for validation\n
Action.c(50):                   that._log('inject', scriptSource);\n
Action.c(50):                 }\n
Action.c(50):               }\n
Action.c(50):     \n
Action.c(50):               created = true;\n
Action.c(50):               return true;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             this._registerTrackers = function () {\n
Action.c(50):               if (!accounts || accounts.length < 1) {\n
Action.c(50):                 that._log('warn', 'No accounts to register');\n
Action.c(50):                 return;\n
Action.c(50):               }\n
Action.c(50):     \n
Action.c(50):               //\n
Action.c(50):               // Universal Analytics\n
Action.c(50):               //\n
Action.c(50):               if (analyticsJS === true) {\n
Action.c(50):                 accounts.forEach(function (trackerObj) {\n
Action.c(50):                   trackerObj.crossDomainLinker = isPropertyDefined('crossDomainLinker', tracke
Action.c(50):     rObj) ? trackerObj.crossDomainLinker : crossDomainLinker;\n
Action.c(50):                   trackerObj.crossLinkDomains = isPropertyDefined('crossLinkDomains', trackerO
Action.c(50):     bj) ? trackerObj.crossLinkDomains : crossLinkDomains;\n
Action.c(50):                   trackerObj.displayFeatures = isPropertyDefined('displayFeatures', trackerObj
Action.c(50):     ) ? trackerObj.displayFeatures : displayFeatures;\n
Action.c(50):                   trackerObj.enhancedLinkAttribution = isPropertyDefined('enhancedLinkAttribut
Action.c(50):     ion', trackerObj) ? trackerObj.enhancedLinkAttribution : enhancedLinkAttribution;\n
Action.c(50):                   trackerObj.set = isPropertyDefined('set', trackerObj) ? trackerObj.set : {};
Action.c(50):     \n
Action.c(50):                   trackerObj.trackEcommerce = isPropertyDefined('trackEcommerce', trackerObj) 
Action.c(50):     ? trackerObj.trackEcommerce : ecommerce;\n
Action.c(50):                   trackerObj.trackEvent = isPropertyDefined('trackEvent', trackerObj) ? tracke
Action.c(50):     rObj.trackEvent : false;\n
Action.c(50):     \n
Action.c(50):                   // Logic to choose the account fields to be used.\n
Action.c(50):                   // cookieConfig is being deprecated for a tracker specific property: fields.
Action.c(50):     \n
Action.c(50):                   var fields = {};\n
Action.c(50):                   if (isPropertyDefined('fields', trackerObj)) {\n
Action.c(50):                     fields = trackerObj.fields;\n
Action.c(50):                   } else if (isPropertyDefined('cookieConfig', trackerObj)) {\n
Action.c(50):                     
Action.c(50): t=249025ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249025ms: 8174-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249027ms: 18-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249027ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249027ms: 8156-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249027ms: 36-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249028ms: 7725-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249175ms: 4983-byte ENCODED response body received for "https://www.advantageonlineshopping.com/main.min.js" (RelFrameId=, Internal ID=93)
Action.c(50): t=249176ms: 12288-byte DECODED response body for "https://www.advantageonlineshopping.com/main.min.js" (RelFrameId=, Internal ID=93)
Action.c(50):     if (angular.isString(trackerObj.cookieConfig)) {\n
Action.c(50):                       fields.cookieDomain = trackerObj.cookieConfig;\n
Action.c(50):                     } else {\n
Action.c(50):                       fields = trackerObj.cookieConfig;\n
Action.c(50):                     }\n
Action.c(50):                   } else if (angular.isString(cookieConfig)) {\n
Action.c(50):                     fields.cookieDomain = cookieConfig;\n
Action.c(50):                   } else if (cookieConfig) {\n
Action.c(50):                     fields = cookieConfig;\n
Action.c(50):                   }\n
Action.c(50):                   if (trackerObj.crossDomainLinker === true) {\n
Action.c(50):                     fields.allowLinker = true;\n
Action.c(50):                   }\n
Action.c(50):                   if (isPropertyDefined('name', trackerObj)) {\n
Action.c(50):                     fields.name = trackerObj.name;\n
Action.c(50):                   }\n
Action.c(50):                   trackerObj.fields = fields;\n
Action.c(50):     \n
Action.c(50):                   _ga('create', trackerObj.tracker, trackerObj.fields);\n
Action.c(50):     \n
Action.c(50):                   // Hybrid mobile application support\n
Action.c(50):                   // https://developers.google.com/analytics/devguides/collection/analyticsjs/
Action.c(50):     tasks\n
Action.c(50):                   if (hybridMobileSupport === true) {\n
Action.c(50):                     _ga(generateCommandName('set', trackerObj), 'checkProtocolTask', null);\n
Action.c(50):                   }\n
Action.c(50):     \n
Action.c(50):                   // Send all custom set commands from the trackerObj.set property\n
Action.c(50):                   for (var key in trackerObj.set) {\n
Action.c(50):                     if (trackerObj.set.hasOwnProperty(key)) {\n
Action.c(50):                       _ga(generateCommandName('set', trackerObj), key, trackerObj.set[key]);\n
Action.c(50):                     }\n
Action.c(50):                   }\n
Action.c(50):     \n
Action.c(50):                   if (trackerObj.crossDomainLinker === true) {\n
Action.c(50):                     _ga(generateCommandName('require', trackerObj), 'linker');\n
Action.c(50):                     if (angular.isDefined(trackerObj.crossLinkDomains)) {\n
Action.c(50):                       _ga(generateCommandName('linker:autoLink', trackerObj), trackerObj.cross
Action.c(50):     LinkDomains);\n
Action.c(50):                     }\n
Action.c(50):                   }\n
Action.c(50):     \n
Action.c(50):                   if (trackerObj.displayFeatures) {\n
Action.c(50):                     _ga(generateCommandName('require', trackerObj), 'displayfeatures');\n
Action.c(50):                   }\n
Action.c(50):     \n
Action.c(50):                   if (trackerObj.trackEcommerce) {\n
Action.c(50):                     if (!enhancedEcommerce) {\n
Action.c(50):                       _ga(generateCommandName('require', trackerObj), 'ecommerce');\n
Action.c(50):                     } else {\n
Action.c(50):                       _ga(generateCommandName('require', trackerObj), 'ec');\n
Action.c(50):                       _ga(generateCommandName('set', trackerObj), '&cu', currency);\n
Action.c(50):                     }\n
Action.c(50):                   }\n
Action.c(50):     \n
Action.c(50):                   if (trackerObj.enhancedLinkAttribution) {\n
Action.c(50):                     _ga(generateCommandName('require', trackerObj), 'linkid');\n
Action.c(50):                   }\n
Action.c(50):     \n
Action.c(50):                   if (trackRoutes && !ignoreFirstPageLoad) {\n
Action.c(50):                     _ga(generateCommandName('send', trackerObj), 'pageview', trackPrefix + get
Action.c(50):     Url());\n
Action.c(50):                   }\n
Action.c(50):                 });\n
Action.c(50):               //\n
Action.c(50):               // Classic Analytics\n
Action.c(50):               //\n
Action.c(50):               } else {\n
Action.c(50):                 if (accounts.length > 1) {\n
Action.c(50):                   that._log('warn', 'Multiple trackers are not supported with ga.js. Using fir
Action.c(50):     st tracker only');\n
Action.c(50):                   accounts = accounts.slice(0, 1);\n
Action.c(50):                 }\n
Action.c(50):     \n
Action.c(50):                 _gaq('_setAccount', accounts[0].tracker);\n
Action.c(50):                 if(domainName) {\n
Action.c(50):                   _gaq('_setDomainName', domainName);\n
Action.c(50):                 }\n
Action.c(50):                 if (enhancedLinkAttribution) {\n
Action.c(50):                   _gaq('_require', 'inpage_linkid', '//www.google-analytics.com/plugins/ga/inp
Action.c(50):     age_linkid.js');\n
Action.c(50):                 }\n
Action.c(50):                 if (trackRoutes && !ignoreFirstPageLoad) {\n
Action.c(50):                   if (removeRegExp) {\n
Action.c(50):                     _gaq('_trackPageview', getUrl());\n
Action.c(50):                   } else {\n
Action.c(50):                     _gaq('_trackPageview');\n
Action.c(50):                   }\n
Action.c(50):                 }\n
Action.c(50):               }\n
Action.c(50):     \n
Action.c(50):               return true;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             this._ecommerceEnabled = function (warn, command) {\n
Action.c(50):               var result = ecommerce && !enhancedEcommerce;\n
Action.c(50):               if (warn === true && result === false) {\n
Action.c(50):                 if (ecommerce && enhancedEcommerce) {\n
Action.c(50):                   that._log('warn', command + ' is not available when Enhanced Ecommerce is en
Action.c(50):     abled with analytics.js');\n
Action.c(50):                 } else {\n
Action.c(50):                   that._log('warn', 'Ecommerce must be enabled to use ' + command + ' with ana
Action.c(50):     lytics.js');\n
Action.c(50):                 }\n
Action.c(50):               }\n
Action.c(50):               return result;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             this._enhancedEcommerceEnabled = function (warn, command) {\n
Action.c(50):               var result = ecommerce && enhancedEcommerce;\n
Action.c(50):               if (warn === true && result === false) {\n
Action.c(50):                 that._log('warn', 'Enhanced Ecommerce must be enabled to use ' + command + ' w
Action.c(50):     ith analytics.js');\n
Action.c(50):               }\n
Action.c(50):               return result;\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track page\n
Action.c(50):              https://developers.google.com/analytics/devguides/collection/gajs/\n
Action.c(50):              https://developers.google.com/analytics/devguides/collection/analyticsjs/pages\n
Action.c(50):              * @param url\n
Action.c(50):              * @param title\n
Action.c(50):              * @param custom\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackPage = function (url, title, custom) {\n
Action.c(50):               url = url ? url : getUrl();\n
Action.c(50):               title = title ? title : $document[0].title;\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 // http://stackoverflow.com/questions/7322288/how-can-i-set-a-page-title-with-
Action.c(50):     google-analytics\n
Action.c(50):                 _gaq('_set', 'title', title);\n
Action.c(50):                 _gaq('_trackPageview', (trackPrefix + url));\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 var opt_fieldObject = {\n
Action.c(50):                   'page': trackPrefix + url,\n
Action.c(50):                   'title': title\n
Action.c(50):                 };\n
Action.c(50):                 angular.extend(opt_fieldObject, getUtmParams());\n
Action.c(50):                 if (angular.isObject(custom)) {\n
Action.c(50):                   angular.extend(opt_fieldObject, custom);\n
Action.c(50):                 }\n
Action.c(50):                 _gaMultipleTrackers(undefined, 'send', 'pageview', opt_fieldObject);\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track event\n
Action.c(50):              https://developers.google.com/analytics/devguides/collection/gajs/eventTrackerGui
Action.c(50):     de\n
Action.c(50):              https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n
Action.c(50):              * @param category\n
Action.c(50):              * @param action\n
Action.c(50):              * @param label\n
Action.c(50):              * @param value\n
Action.c(50):              * @param noninteraction\n
Action.c(50):              * @param custom\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackEvent = function (category, action, label, value, noninteraction, custo
Action.c(50):     m) {\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_trackEvent', category, action, label, value, !!noninteraction);\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 var opt_fieldObject = {};\n
Action.c(50):                 var includeFn = function (trackerObj) {\n
Action.c(50):                   return isPropertySetTo('trackEvent', trackerObj, true);\n
Action.c(50):                 };\n
Action.c(50):     \n
Action.c(50):                 if (angular.isDefined(noninteraction)) {\n
Action.c(50):                   opt_fieldObject.nonInteraction = !!noninteraction;\n
Action.c(50):                 }\n
Action.c(50):                 if (angular.isObject(custom)) {\n
Action.c(50):                   angular.extend(opt_fieldObject, custom);\n
Action.c(50):                 }\n
Action.c(50):                 if (!angular.isDefined(opt_fieldObject.page)) {\n
Action.c(50):                   opt_fieldObject.page = getUrl();\n
Action.c(50):                 }\n
Action.c(50):                 _gaMultipleTrackers(includeFn, 'send', 'event', category, action, label, value
Action.c(50):     , opt_fieldObject);\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Add transaction\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSA
Action.c(50):     piEcommerce#_gat.GA_Tracker_._addTrans\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecomme
Action.c(50):     rce#addTrans\n
Action.c(50):              * @param transactionId\n
Action.c(50):              * @param affiliation\n
Action.c(50):              * @param total\n
Action.c(50):              * @param tax\n
Action.c(50):              * @param shipping\n
Action.c(50):              * @param city\n
Action.c(50):              * @param state\n
Action.c(50):              * @param country\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._addTrans = function (transactionId, affiliation, total, tax, shipping, city,
Action.c(50):      state, country, currency) {\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_addTrans', transactionId, affiliation, total, tax, shipping, city, stat
Action.c(50):     e, country);\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._ecommerceEnabled(true, 'addTrans')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):     \n
Action.c(50):                   _gaMultipleTrackers(\n
Action.c(50):                     includeFn,\n
Action.c(50):                     'ecommerce:addTransaction',\n
Action.c(50):                     {\n
Action.c(50):                       id: transactionId,\n
Action.c(50):                       affiliation: affiliation,\n
Action.c(50):                       revenue: total,\n
Action.c(50):                       tax: tax,\n
Action.c(50):                       shipping: shipping,\n
Action.c(50):                       currency: currency || 'USD'\n
Action.c(50):                     });\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Add item to transaction\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSA
Action.c(50):     piEcommerce#_gat.GA_Tracker_._addItem\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecomme
Action.c(50):     rce#addItem\n
Action.c(50):              * @param transactionId\n
Action.c(50):              * @param sku\n
Action.c(50):              * @param name\n
Action.c(50):              * @param category\n
Action.c(50):              * @param price\n
Action.c(50):              * @param quantity\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._addItem = function (transactionId, sku, name, category, price, quantity) {\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_addItem', transactionId, sku, name, category, price, quantity);\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._ecommerceEnabled(true, 'addItem')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):     \n
Action.c(50):                   _gaMultipleTrackers(\n
Action.c(50):                     includeFn,\n
Action.c(50):                     'ecommerce:addItem',\n
Action.c(50):                     {\n
Action.c(50):                       id: transactionId,\n
Action.c(50):                       name: name,\n
Action.c(50):                       sku: sku,\n
Action.c(50):                       category: category,\n
Action.c(50):                       price: price,\n
Action.c(50):                       quantity: quantity\n
Action.c(50):                     });\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track transaction\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSA
Action.c(50):     piEcommerce#_gat.GA_Tracker_._trackTrans\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecomme
Action.c(50):     rce#sendingData\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackTrans = function () {\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_trackTrans');\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._ecommerceEnabled(true, 'trackTrans')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):     \n
Action.c(50):                   _gaMultipleTrackers(includeFn, 'ecommerce:send');\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Clear transaction\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecomme
Action.c(50):     rce#clearingData\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._clearTrans = function () {\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._ecommerceEnabled(true, 'clearTrans')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):     \n
Action.c(50):                   _gaMultipleTrackers(includeFn, 'ecommerce:clear');\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Enhanced Ecommerce\n
Action.c(50):              */\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Add Product\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#product-data\n
Action.c(50):              * @param productId\n
Action.c(50):              * @param name\n
Action.c(50):              * @param category\n
Action.c(50):              * @param brand\n
Action.c(50):              * @param variant\n
Action.c(50):              * @param price\n
Action.c(50):              * @param quantity\n
Action.c(50):              * @param coupon\n
Action.c(50):              * @param position\n
Action.c(50):              * @param custom\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._addProduct = function (productId, name, category, brand, variant, price, qua
Action.c(50):     ntity, coupon, position, custom) {\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_addProduct', productId, name, category, brand, variant, price, quantity
Action.c(50):     , coupon, position);\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._enhancedEcommerceEnabled(true, 'addProduct')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):                   var details = {\n
Action.c(50):                     id: productId,\n
Action.c(50):                     name: name,\n
Action.c(50):                     category: category,\n
Action.c(50):                     brand: brand,\n
Action.c(50):                     variant: variant,\n
Action.c(50):                     price: price,\n
Action.c(50):                     quantity: quantity,\n
Action.c(50):                     coupon: coupon,\n
Action.c(50):                     position: position\n
Action.c(50):                   };\n
Action.c(50):                   if (angular.isOb
Action.c(50): t=249183ms: 12288-byte DECODED response body for "https://www.advantageonlineshopping.com/main.min.js" (RelFrameId=, Internal ID=93)
Action.c(50):     ject(custom)) {\n
Action.c(50):                     angular.extend(details, custom);\n
Action.c(50):                   }\n
Action.c(50):                   _gaMultipleTrackers(includeFn, 'ec:addProduct', details);\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Add Impression\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#impression-data\n
Action.c(50):              * @param id\n
Action.c(50):              * @param name\n
Action.c(50):              * @param list\n
Action.c(50):              * @param brand\n
Action.c(50):              * @param category\n
Action.c(50):              * @param variant\n
Action.c(50):              * @param position\n
Action.c(50):              * @param price\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._addImpression = function (id, name, list, brand, category, variant, position
Action.c(50):     , price){\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_addImpression', id, name, list, brand, category, variant, position, pri
Action.c(50):     ce);\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._enhancedEcommerceEnabled(true, 'addImpression')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):     \n
Action.c(50):                   _gaMultipleTrackers(\n
Action.c(50):                     includeFn,\n
Action.c(50):                     'ec:addImpression',\n
Action.c(50):                     {\n
Action.c(50):                       id: id,\n
Action.c(50):                       name: name,\n
Action.c(50):                       category: category,\n
Action.c(50):                       brand: brand,\n
Action.c(50):                       variant: variant,\n
Action.c(50):                       list: list,\n
Action.c(50):                       position: position,\n
Action.c(50):                       price: price\n
Action.c(50):                     });\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Add Promo\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce\n
Action.c(50):              * @param productId\n
Action.c(50):              * @param name\n
Action.c(50):              * @param creative\n
Action.c(50):              * @param position\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._addPromo = function (productId, name, creative, position) {\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_addPromo', productId, name, creative, position);\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._enhancedEcommerceEnabled(true, 'addPromo')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):     \n
Action.c(50):                   _gaMultipleTrackers(\n
Action.c(50):                     includeFn,\n
Action.c(50):                     'ec:addPromo',\n
Action.c(50):                     {\n
Action.c(50):                       id: productId,\n
Action.c(50):                       name: name,\n
Action.c(50):                       creative: creative,\n
Action.c(50):                       position: position\n
Action.c(50):                     });\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Set Action\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#measuring-actions\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#action-types\n
Action.c(50):              * @param action\n
Action.c(50):              * @param obj\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._setAction = function (action, obj){\n
Action.c(50):               _gaJs(function () {\n
Action.c(50):                 _gaq('_setAction', action, obj);\n
Action.c(50):               });\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 if (that._enhancedEcommerceEnabled(true, 'setAction')) {\n
Action.c(50):                   var includeFn = function (trackerObj) {\n
Action.c(50):                     return isPropertySetTo('trackEcommerce', trackerObj, true);\n
Action.c(50):                   };\n
Action.c(50):     \n
Action.c(50):                   _gaMultipleTrackers(includeFn, 'ec:setAction', action, obj);\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track Transaction\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#measuring-transactions\n
Action.c(50):              * @param transactionId\n
Action.c(50):              * @param affiliation\n
Action.c(50):              * @param revenue\n
Action.c(50):              * @param tax\n
Action.c(50):              * @param shipping\n
Action.c(50):              * @param coupon\n
Action.c(50):              * @param list\n
Action.c(50):              * @param step\n
Action.c(50):              * @param option\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackTransaction = function (transactionId, affiliation, revenue, tax, shipp
Action.c(50):     ing, coupon, list, step, option) {\n
Action.c(50):               this._setAction('purchase', getActionFieldObject(transactionId, affiliation, rev
Action.c(50):     enue, tax, shipping, coupon, list, step, option));\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track Refund\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#measuring-refunds\n
Action.c(50):              * @param transactionId\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackRefund = function (transactionId) {\n
Action.c(50):               this._setAction('refund', getActionFieldObject(transactionId));\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track Checkout\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#measuring-checkout\n
Action.c(50):              * @param step\n
Action.c(50):              * @param option\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackCheckOut = function (step, option) {\n
Action.c(50):               this._setAction('checkout', getActionFieldObject(null, null, null, null, null, n
Action.c(50):     ull, null, step, option));\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track detail\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackDetail = function () {\n
Action.c(50):               this._setAction('detail');\n
Action.c(50):               this._pageView();\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track add/remove to cart\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#add-remove-cart\n
Action.c(50):              * @param action\n
Action.c(50):              * @param list\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackCart = function (action, listName) {\n
Action.c(50):               if (['add', 'remove'].indexOf(action) !== -1) {\n
Action.c(50):                 this._setAction(action, { list: listName });\n
Action.c(50):                 this._trackEvent('UX', 'click', action + (action === 'add' ? ' to cart' : ' fr
Action.c(50):     om cart'));\n
Action.c(50):               }\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track promo click\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#measuring-promo-clicks\n
Action.c(50):              * @param promotionName\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._promoClick = function (promotionName) {\n
Action.c(50):               this._setAction('promo_click');\n
Action.c(50):               this._trackEvent('Internal Promotions', 'click', promotionName);\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track product click\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanc
Action.c(50):     ed-ecommerce#measuring-promo-clicks\n
Action.c(50):              * @param promotionName\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._productClick = function (listName) {\n
Action.c(50):               this._setAction('click', getActionFieldObject(null, null, null, null, null, null
Action.c(50):     , listName, null, null));\n
Action.c(50):               this._trackEvent('UX', 'click', listName);\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Send page view\n
Action.c(50):              * @param trackerName\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._pageView = function (trackerName) {\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 _ga(generateCommandName('send', trackerName), 'pageview');\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Send custom events\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/user-t
Action.c(50):     imings#implementation\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/social
Action.c(50):     -interactions#implementation\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._send = function () {\n
Action.c(50):               var args = Array.prototype.slice.call(arguments);\n
Action.c(50):               args.unshift('send');\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 _ga.apply(that, args);\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Set custom dimensions, metrics or experiment\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/custom
Action.c(50):     -dims-mets\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/field-
Action.c(50):     reference#customs\n
Action.c(50):              * @param name (Required)\n
Action.c(50):              * @param value (Required)\n
Action.c(50):              * @param trackerName (Optional)\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._set = function (name, value, trackerName) {\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 _ga(generateCommandName('set', trackerName), name, value);\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Track user timings\n
Action.c(50):              * @param timingCategory (Required): A string for categorizing all user timing var
Action.c(50):     iables into logical groups(e.g jQuery).\n
Action.c(50):              * @param timingVar (Required): A string to identify the variable being recorded(e
Action.c(50):     .g. JavaScript Load).\n
Action.c(50):              * @param timingValue (Required): The number of milliseconds in elapsed time to re
Action.c(50):     port to Google Analytics(e.g. 20).\n
Action.c(50):              * @param timingLabel (Optional): A string that can be used to add flexibility in 
Action.c(50):     visualizing user timings in the reports(e.g. Google CDN).\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackTimings = function (timingCategory, timingVar, timingValue, timingLabel
Action.c(50):     ) {\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 _gaMultipleTrackers(undefined, 'send', 'timing', timingCategory, timingVar, ti
Action.c(50):     mingValue, timingLabel);\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             /**\n
Action.c(50):              * Exception tracking\n
Action.c(50):              * https://developers.google.com/analytics/devguides/collection/analyticsjs/except
Action.c(50):     ions\n
Action.c(50):              * @param description (Optional): A description of the exception.\n
Action.c(50):              * @param isFatal (Optional): true if the exception was fatal, false otherwise.\n
Action.c(50):              * @private\n
Action.c(50):              */\n
Action.c(50):             this._trackException = function (description, isFatal) {\n
Action.c(50):               _analyticsJs(function () {\n
Action.c(50):                 _gaMultipleTrackers(undefined, 'send', 'exception', { exDescription: descripti
Action.c(50):     on, exFatal: !!isFatal});\n
Action.c(50):               });\n
Action.c(50):             };\n
Action.c(50):     \n
Action.c(50):             // creates the Google Analytics tracker\n
Action.c(50):             if (!delayScriptTag) {\n
Action.c(50):               this._registerScriptTags();\n
Action.c(50):               this._registerTrackers();\n
Action.c(50):             }\n
Action.c(50):     \n
Action.c(50):             // activates page tracking\n
Action.c(50):             if (trackRoutes) {\n
Action.c(50):               $rootScope.$on(pageEvent, function () {\n
Action.c(50):                 // Apply $route based filtering if configured\n
Action.c(50):                 if (readFromRoute) {\n
Action.c(50):                   // Avoid tracking undefined routes, routes without template (e.g. redirect r
Action.c(50):     outes)\n
Action.c(50):                   // and those explicitly marked as 'do not track'\n
Action.c(50):                   if (!$route.current || !$route.current.templateUrl || $route.current.doNotTr
Action.c(50):     ack) {\n
Action.c(50):                     return;\n
Action.c(50):                   }\n
Action.c(50):                 }\n
Action.c(50):                 \n
Action.c(50):                 that._trackPage();\n
Action.c(50):               });\n
Action.c(50):             }\n
Action.c(50):     \n
Action.c(50):             return {\n
Action.c(50):               log: that.log,\n
Action.c(50):               offlineQueue: that.offlineQueue,\n
Action.c(50):               configuration: {\n
Action.c(50):                 accounts: accounts,\n
Action.c(50):                 universalAnalytics: analyticsJS,\n
Action.c(50):                 crossDomainLinker: crossDomainLinker,\n
Action.c(50):                 crossLinkDomains: crossLinkDomains,\n
Action.c(50):                 currency: currency,\n
Action.c(50):                 debugMode: debugMode,\n
Action.c(50):                 delayScriptTag: delayScriptTag,\n
Action.c(50):                 disableAnalytics: disableAnalytics,\n
Action.c(50):                 displayFeatures: displayFeatures,\n
Action.c(50):                 domainName: domainName,\n
Action.c(50):                 ecommerce: that._ecommerceEnabled(),\n
Action.c(50):                 enhancedEcommerce: that._enhancedEcommerceEnabled(),\n
Action.c(50):                 enhancedLinkAttribution: enhancedLinkAttribution,\n
Action.c(50):                 experimentId: experimentId,\n
Action.c(50):                 hybridMobileSupport: hybridMobileSupport,\n
Action.c(50):                 ignoreFirstPageLoad: ignoreFirstPageLoad,\n
Action.c(50):                 logAllCalls: logAllCalls,\n
Action.c(50):                 pageEvent: pageEvent,\n
Action.c(50):                 readFromRoute: readFromRoute,\n
Action.c(50):                 removeRegExp: removeRegExp,\n
Action.c(50):                 testMode: testMode,\n
Action.c(50):                 traceDebuggingMode: traceDebuggingMode,\n
Action.c(50):                 trackPrefix: trackPrefix,\n
Action.c(50):                 trackRoutes: trackRoutes,\n
Action.c(50):                 trackUrlParams: trackUrlParams\n
Action.c(50):               },\n
Action.c(50):               getUrl: getUrl,\n
Action.c(50):               /* DEPRECATED */\n
Action.c(50):               setCookieConfig: function (config) {\n
Action.c(50):                 that._log('warn', 'DEPRECATION WARNING: setCookieConfig method is deprecated. 
Action.c(50):     Please use tracker fields instead.');\n
Action.c(50):                 return that._setCookieConfig.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               /* DEPRECATED */\n
Action.c(50):               getCookieConfig: function () {\n
Action.c(50):                 that._log('warn', 'DEPRECATION WARNING: getCookieConfig method is deprecated. 
Action.c(50):     Please use tracker fields instead.');\n
Action.c(50):                 return cookieConfig;\n
Action.c(50):               },\n
Action.c(50):               /* DEPRECATED */\n
Action.c(50):               createAnalyticsScriptTag: function (config) {\n
Action.c(50):                 that._log('warn', 'DEPRECATION WARNING: createAnalyticsScriptTag method is dep
Action.c(50):     recated. Please use registerScriptTags and registerTrackers methods instead.');\n
Action.c(50):                 if (config) {\n
Action.c(50):                   cookieConfig = config;\n
Action.c(50):                 }\n
Action.c(50):                 return that._createAnalyticsScriptTag();\n
Action.c(50):               },\n
Action.c(50):               /* DEPRE
Action.c(50): t=249190ms: 7904-byte DECODED response body for "https://www.advantageonlineshopping.com/main.min.js" (RelFrameId=, Internal ID=93)
Action.c(50):     CATED */\n
Action.c(50):               createScriptTag: function () {\n
Action.c(50):                 that._log('warn', 'DEPRECATION WARNING: createScriptTag method is deprecated. 
Action.c(50):     Please use registerScriptTags and registerTrackers methods instead.');\n
Action.c(50):                 return that._createScriptTag();\n
Action.c(50):               },\n
Action.c(50):               registerScriptTags: function () {\n
Action.c(50):                 return that._registerScriptTags();\n
Action.c(50):               },\n
Action.c(50):               registerTrackers: function () {\n
Action.c(50):                 return that._registerTrackers();\n
Action.c(50):               },\n
Action.c(50):               offline: function (mode) {\n
Action.c(50):                 if (mode === true && offlineMode === false) {\n
Action.c(50):                   // Go to offline mode\n
Action.c(50):                   offlineMode = true;\n
Action.c(50):                 }\n
Action.c(50):                 if (mode === false && offlineMode === true) {\n
Action.c(50):                   // Go to online mode and process the offline queue\n
Action.c(50):                   offlineMode = false;\n
Action.c(50):                   while (that.offlineQueue.length > 0) {\n
Action.c(50):                     var obj = that.offlineQueue.shift();\n
Action.c(50):                     obj[0].apply(that, obj[1]);\n
Action.c(50):                   }\n
Action.c(50):                 }\n
Action.c(50):                 return offlineMode;\n
Action.c(50):               },\n
Action.c(50):               trackPage: function (url, title, custom) {\n
Action.c(50):                 that._trackPage.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackEvent: function (category, action, label, value, noninteraction, custom) {\n
Action.c(50):                 that._trackEvent.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               addTrans: function (transactionId, affiliation, total, tax, shipping, city, stat
Action.c(50):     e, country, currency) {\n
Action.c(50):                 that._addTrans.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               addItem: function (transactionId, sku, name, category, price, quantity) {\n
Action.c(50):                 that._addItem.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackTrans: function () {\n
Action.c(50):                 that._trackTrans.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               clearTrans: function () {\n
Action.c(50):                 that._clearTrans.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               addProduct: function (productId, name, category, brand, variant, price, quantity
Action.c(50):     , coupon, position, custom) {\n
Action.c(50):                 that._addProduct.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               addPromo: function (productId, name, creative, position) {\n
Action.c(50):                 that._addPromo.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               addImpression: function (productId, name, list, brand, category, variant, positi
Action.c(50):     on, price) {\n
Action.c(50):                 that._addImpression.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               productClick: function (listName) {\n
Action.c(50):                 that._productClick.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               promoClick : function (promotionName) {\n
Action.c(50):                 that._promoClick.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackDetail: function () {\n
Action.c(50):                 that._trackDetail.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackCart: function (action, list) {\n
Action.c(50):                 that._trackCart.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackCheckout: function (step, option) {\n
Action.c(50):                 that._trackCheckOut.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackTimings: function (timingCategory, timingVar, timingValue, timingLabel) {\n
Action.c(50):                 that._trackTimings.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackTransaction: function (transactionId, affiliation, revenue, tax, shipping, 
Action.c(50):     coupon, list, step, option) {\n
Action.c(50):                 that._trackTransaction.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               trackException: function (description, isFatal) {\n
Action.c(50):                 that._trackException.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               setAction: function (action, obj) {\n
Action.c(50):                 that._setAction.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               pageView: function () {\n
Action.c(50):                 that._pageView.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               send: function (obj) {\n
Action.c(50):                 that._send.apply(that, arguments);\n
Action.c(50):               },\n
Action.c(50):               set: function (name, value, trackerName) {\n
Action.c(50):                 that._set.apply(that, arguments);\n
Action.c(50):               }\n
Action.c(50):             };\n
Action.c(50):           }];\n
Action.c(50):         })\n
Action.c(50):     \n
Action.c(50):         .directive('gaTrackEvent', ['Analytics', '$parse', function (Analytics, $parse) {\n
Action.c(50):           return {\n
Action.c(50):             restrict: 'A',\n
Action.c(50):             link: function (scope, element, attrs) {\n
Action.c(50):               var options = $parse(attrs.gaTrackEvent);\n
Action.c(50):               element.bind('click', function () {\n
Action.c(50):                 if(attrs.gaTrackEventIf){\n
Action.c(50):                   if(!scope.$eval(attrs.gaTrackEventIf)){\n
Action.c(50):                     return; // Cancel this event if we don't pass the ga-track-event-if condit
Action.c(50):     ion\n
Action.c(50):                   }\n
Action.c(50):                 }\n
Action.c(50):                 if (options.length > 1) {\n
Action.c(50):                   Analytics.trackEvent.apply(Analytics, options(scope));\n
Action.c(50):                 }\n
Action.c(50):               });\n
Action.c(50):             }\n
Action.c(50):           };\n
Action.c(50):         }]);\n
Action.c(50):       return angular.module('angular-google-analytics');\n
Action.c(50):     }));\n
Action.c(50):     \n
Action.c(50):     /**\n
Action.c(50):      * Created by kubany on 10/12/2015.\n
Action.c(50):      */\n
Action.c(50):     require.config({\n
Action.c(50):         "waitSeconds": 600,\n
Action.c(50):         paths: {\n
Action.c(50):     \n
Action.c(50):             'jquery': 'vendor/jquery/dist/jquery.min',\n
Action.c(50):             'jquery-bez': 'vendor/jquery-bez/jquery.bez.min',\n
Action.c(50):             'jquery.animate-colors': 'vendor/jquery-color-animation/jquery.animate-colors-min'
Action.c(50):     ,\n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):             'angular': 'vendor/angular/angular.min',\n
Action.c(50):             'angular-cookie': 'vendor/angular-cookie/angular-cookie.min',\n
Action.c(50):             'toaster': 'vendor/AngularJS-Toaster/toaster.min',\n
Action.c(50):             'angular-translate': 'vendor/angular-translate/angular-translate.min',\n
Action.c(50):             "uiRouter": 'vendor/angular-ui-router/release/angular-ui-router.min',\n
Action.c(50):             'angularAnimate': 'vendor/angular-animate/angular-animate.min',\n
Action.c(50):             'angularAutocomplete': 'vendor/ngAutocomplete/src/ngAutocomplete',\n
Action.c(50):             'underscore' : 'vendor/underscore/underscore-min',\n
Action.c(50):     \n
Action.c(50):             'bootstrap': 'vendor/bootstrap/dist/js/bootstrap.min',\n
Action.c(50):             'ui-bootstrap': 'vendor/angular-bootstrap/ui-bootstrap-tpls.min',\n
Action.c(50):             'angular-google-analytics': 'vendor/angular-google-analytics/dist/angular-google-a
Action.c(50):     nalytics',\n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):             'jPushMenu': 'utils/jPushMenu',\n
Action.c(50):             'mainScript': 'utils/main',\n
Action.c(50):             'accordion': 'utils/accordion',\n
Action.c(50):             'server': 'utils/server',\n
Action.c(50):             'nouislider': 'utils/noUiSlider.8.2.1/nouislider',\n
Action.c(50):             'wrongDirection': 'utils/wrongDirection',\n
Action.c(50):             'UserCookie': 'utils/Models/UserCookie',\n
Action.c(50):             'slider': 'utils/slider',\n
Action.c(50):             'jquery-soap': 'utils/jquery.soap',\n
Action.c(50):     \n
Action.c(50):             'englishLanguage': 'languages/english',\n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):         },\n
Action.c(50):         shim: {\n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):             'angular': {\n
Action.c(50):                 'exports': 'angular'\n
Action.c(50):             },\n
Action.c(50):             'app': {\n
Action.c(50):                 deps: ['angular']\n
Action.c(50):             },\n
Action.c(50):             'angular-cookie': {\n
Action.c(50):                 deps: ['angular']\n
Action.c(50):             },\n
Action.c(50):             'toaster': {\n
Action.c(50):                 deps: ['angular', 'angularAnimate']\n
Action.c(50):             },\n
Action.c(50):             'angular-translate': {\n
Action.c(50):                 deps: ['angular']\n
Action.c(50):             },\n
Action.c(50):             'nouislider': {},\n
Action.c(50):             'englishLanguage': {},\n
Action.c(50):             'angularAutocomplete': {\n
Action.c(50):                 deps: ['angular']\n
Action.c(50):             },\n
Action.c(50):             'ui-bootstrap': ['angular'],\n
Action.c(50):             'angularAnimate': ['angular'],\n
Action.c(50):             'jquery-bez': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'jquery-soap': {\n
Action.c(50):                 'deps': ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'jquery.animate-colors': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'bootstrap': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'jPushMenu': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'mainScript': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'accordion': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'slider': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'wrongDirection': {\n
Action.c(50):                 deps: ['jquery']\n
Action.c(50):             },\n
Action.c(50):             'uiRouter': {\n
Action.c(50):                 deps: ['angular']\n
Action.c(50):             }\n
Action.c(50):         }\n
Action.c(50):     });\n
Action.c(50):     \n
Action.c(50):     window.name = "NG_DEFER_BOOTSTRAP!";\n
Action.c(50):     \n
Action.c(50):     require(['angular', 'app', 'angular-translate', 'bootstrap', 'englishLanguage',\n
Action.c(50):             'jquery', 'jquery-bez', 'jquery.animate-colors', 'jPushMenu', 'mainScript', 'serve
Action.c(50):     r',\n
Action.c(50):             'nouislider', 'accordion', 'wrongDirection', 'UserCookie',\n
Action.c(50):             'slider', 'uiRouter', 'angular-cookie', 'toaster', 'angularAutocomplete',\n
Action.c(50):             'angularAnimate', 'ui-bootstrap', 'jquery-soap', 'underscore', 'angular-google-ana
Action.c(50):     lytics',\n
Action.c(50):         ], function (angular, app) {\n
Action.c(50):                 angular.bootstrap(document, ['aos']);\n
Action.c(50):                 angular.resumeBootstrap();\n
Action.c(50):         }\n
Action.c(50):     );\n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):     \n
Action.c(50):     define("main", function(){});\n
Action.c(50):     \n
Action.c(50): t=249194ms: Request done "https://www.advantageonlineshopping.com/main.min.js"  	[MsgId: MMSG-26000]
Action.c(50): t=249194ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249194ms: 8174-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249194ms: 18-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249194ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249194ms: 3675-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249347ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249347ms: 8174-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249349ms: 18-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249349ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249349ms: 8156-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249349ms: 36-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249349ms: 4516-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249500ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249500ms: 8174-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249501ms: 18-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249501ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249501ms: 8156-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249501ms: 36-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249501ms: 3675-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249652ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249652ms: 8174-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249654ms: 18-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249654ms: 8192-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249655ms: 8156-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249655ms: 36-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249655ms: 1496-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(50): t=249655ms: 3020-byte response body for "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" (RelFrameId=, Internal ID=113)
Action.c(215): Notify: Transaction "Register" ended with a "Stop" status (Duration: 25,4695).	[MsgId: MMSG-16873]
Action.c(50): Notify: Transaction "Home" ended with a "Stop" status (Duration: 8,3906 Wasted Time: 0,0064).	[MsgId: MMSG-16871]
Action.c(215): Notify: Transaction "02_User_Registration" ended with a "Stop" status (Duration: 41,2343 Think Time: 5,0066 Wasted Time: 0,0064).	[MsgId: MMSG-16870]
Action.c(50): Notify: Transaction "02_User_Registration" ended with a "Stop" status (Duration: 8,3906 Wasted Time: 0,0064).	[MsgId: MMSG-16871]
Abort was called from an action.	[MsgId: MMSG-10447]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(50): Warning -27760: Request "https://www.advantageonlineshopping.com/css/images/Banner1.jpg" failed  	[MsgId: MWAR-27760]
Action.c(50): t=249791ms: Closed connection [0] to www.advantageonlineshopping.com:443 after completing 0 request(s)  	[MsgId: MMSG-26000]
Action.c(215): t=249792ms: Closed connection [0] to www.advantageonlineshopping.com:443 after completing 0 request(s)  	[MsgId: MMSG-26000]
Action.c(215): Notify: Transaction "Register" ended with a "Stop" status (Duration: 4,1890).	[MsgId: MMSG-16873]
Action.c(215): Notify: Transaction "02_User_Registration" ended with a "Stop" status (Duration: 20,1853 Think Time: 5,0085 Wasted Time: 0,0060).	[MsgId: MMSG-16870]
HTML-Mode memory management statistics: Reusable=1, NonReusable=0, CsMemBlockSize=4096, checks enabled  	[MsgId: MMSG-26000]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Vuser 1 (thread 9740), ended OK."	[MsgId: MMSG-10695]
Action.c(215): t=249793ms: Closed connection [0] to www.advantageonlineshopping.com:443 after completing 0 request(s)  	[MsgId: MMSG-26000]
Action.c(215): Notify: Transaction "Register" ended with a "Stop" status (Duration: 13,4768).	[MsgId: MMSG-16873]
Action.c(215): Notify: Transaction "02_User_Registration" ended with a "Stop" status (Duration: 29,4470 Think Time: 5,0106 Wasted Time: 0,0062).	[MsgId: MMSG-16870]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
HTML-Mode memory management statistics: Reusable=1, NonReusable=0, CsMemBlockSize=4096, checks enabled  	[MsgId: MMSG-26000]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(215): t=249794ms: Closed connection [0] to www.advantageonlineshopping.com:443 after completing 0 request(s)  	[MsgId: MMSG-26000]
Vuser 5 (thread 14780), ended OK."	[MsgId: MMSG-10695]
HTML-Mode memory management statistics: Reusable=1, NonReusable=0, CsMemBlockSize=4096, checks enabled  	[MsgId: MMSG-26000]
HTML-Mode memory management statistics: Reusable=1, NonReusable=0, CsMemBlockSize=4096, checks enabled  	[MsgId: MMSG-26000]
Vuser 0 (thread 14020), ended OK."	[MsgId: MMSG-10695]
Vuser 4 (thread 18960), ended OK."	[MsgId: MMSG-10695]
